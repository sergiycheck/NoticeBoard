@model NoticeBoard.Models.Notification

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Notification</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
            User, Model,
            NotificatinOperations.Update)).Succeeded)
        {
            <a asp-action="Edit" asp-route-id="@Model.NotificationId">Edit</a> 
        }
        
    }
    <a asp-action="Index">Back to List</a>
</div>

@{
    if(Model.Comments!=null)
    {
        @foreach(var comment in Model.Comments)
        {
        <tr>
            <td>
                <p>@comment.OwnerID</p>
            </td>
            <td>
                <p>@comment.Description</p>
            </td>
            <td>
                @if (User.Identity.IsAuthenticated)
                {
                    @*TODO:add controller for comments*@
                    @if((await AuthorizationService.AuthorizeAsync(User,comment,NotificatinOperations.Update)).Succeeded)
                    {
                        <a asp-controller="Comment" asp-action="Edit" asp-route-id="@comment.CommentId">Edit</a><span>|</span>
                        <a asp-controller="Comment" asp-action="Delete" asp-route-id="@comment.CommentId">Delete</a>     
                    }
              
                }

            </td>
        </tr>
        }
    }
}

@*Post comment without page reloading using ajax*@

@*TODO:add methods to post comments*@
@if (User.Identity.IsAuthenticated)
{
<form method="post" asp-controller="Comment" asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
       <input type="number" name="NotificationId" value="@Model.NotificationId" class="form-control" readonly required hidden> @* use readonly insted of disabled *@
        <label for="commentDescription" class="control-label">Post comment</label>
        <input type="text" name="Description" id="commentDescription" class="form-control" placeholder="Enter comment" required/>
        @* <span asp-validation-for="Description" class="text-danger"></span> *@
    </div>
    <div class="form-group text-right">
        <input type="submit" value="Post" class="btn btn-primary" />
    </div>
</form>
}else
{
    <div role="form" class="form-group">
        <input type="text" value="Login or Register to add comments" style="color: red;" class="form-control" readonly>
    </div>
}

